.. ZVM OVERVIEW: 总体介绍 

ZVM是基于实时操作系统Zephyr设计的虚拟机管理器（Hypervisor），系统架构如下图所示，主要功能模块包括包括CPU虚拟化、内存虚拟化、中断虚拟化、时钟虚拟化及I/O虚拟化等功能。同时，这个Hypervisor支持两个VM，分别是Linux
OS以及Zephyr OS。

.. figure:: https://gitee.com/cocoeoli/zvm/blob/refactor/zvm_doc/figure/overview.jpg
   :alt: Overview

   Overview

基础模块
========

处理器虚拟化
------------

--------------

CPU虚拟化模块主要功能在于为每个虚拟机虚拟出单独隔离的上下文、程序执行及异常状态，在系统中，每个vCPU以一个线程的形式存在，并由Hypervisor统一调度。为
了更好的提高vCPU的性能，ZVM利用ARMv8架构为Hypervisors提供了一个单独的特权级模式，具有比Kernel更高的特权级，便于对VM进行监管。

内存虚拟化模块
--------------

--------------

内存虚拟化模块主要功能是实现虚拟机（VM）内存地址的访问与隔离，系统也需要将不同虚拟机的内存空间隔离，并监控虚拟机对实际物理内存的访问，以实现对主机物理内存的保护。
ARM提供了两阶段的地址查找策略，即第1阶段从VM的客户机虚拟地址到VM的客户机物理地址的转化，到第2阶段从VM的客户机物理地址到主机物理地址的转换，ARM专门为第2阶段的转换提供了单独的硬件，
以提高地址转换的性能。

中断虚拟化模块
--------------

--------------

中断虚拟化主要使用软件模拟中断控制设备，并基于其实现虚拟中断的配置。在ARMv8架构贤，ZVM统一将VM的中断路由到Hypervisor，并由其分配给不同的vCPU。具体通过软件模拟的ARM
GIC设备实现，同时使用ARM GIC硬件对虚拟化的支持，减少中断处理的开销。

时钟虚拟化
----------

--------------

时钟虚拟化为每个vCPU定义了一组虚拟时钟寄存器，它们单独计数并在预定的时间过后抛出中断，并由Hypervisor转发至VM。同时，在VM切换过程中，
虚拟时钟将会计算VM实际运行的时间，并补偿虚拟机退出的时间，以为虚拟机提供定时器服务。

I/O虚拟化
---------

--------------

在I/O虚拟化方面，在本研究采用的ARM架构中MMIO的方式将设备地址映射的物理内存地址空间进行访问。具体实现上，我们同于构建Virtual
MMIO Device设备，并在创建VM的过程中将设备分配给指定的VM，以实现I/O的虚拟化。

VM生命周期
==========

--------------

**​ZVM中虚拟机的状态有以下几种：**

1. 未运行状态（VM_STATUS_NEVER_RUN）：此状态VM未运行，只是创建了一个VM实体，等待首次调度。
2. 运行状态（VM_STATUS_RUNNING）：此状态VM正在运行，并占用处理器资源。
3. 挂起状态（VM_STATUS_PAUSE）：此状态VM暂停，相关线程在等待队列中，不占用物理CPU，随时可以调度。
4. 停止状态（VM_STATUS_STOP）：此状态VM停止，相关线程都停止执行，相关内存和I/O资源准备释放。

一个完整的生命周期包括VM的创建、VM的运行、VM的暂停和VM的退出等一系列流程。用户通过相应的shell接口实现对VM在各种状态下的切换。
